version: "3.2"

networks:
  app-tier:
    driver: bridge

services:
  etcd0:
    image: 'bitnami/etcd:latest'
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_ADVERTISE_CLIENT_URLS=http://0.0.0.0:2379
    ports:
      - 2379:2379
      - 2380:2380
    networks:
      - app-tier
  logic:
    image: goim/logic
    build:
      context: ./
      args:
        - project=logic
    ports:
      - "3111:3111" # http
      - "3119:3119" # rpc
    command: /app/logic -conf=/app/logic.toml -region=sh -zone=sh001 -deploy.env=dev -weight=10 2>&1 > /app/logic.log
    depends_on:
      - redis
      - kafka
    networks:
      - app-tier

  comet:
    image: goim/comet
    build:
      context: ./
      args:
        - project=comet
    ports:
      - "3101:3101" # tcp
      - "3102:3102" # websocket
      - "3109:3109" # rpc
    command: /app/comet -conf=/app/comet.toml -region=sh -zone=sh001 -deploy.env=dev -weight=10 -addrs=127.0.0.1 -debug=true 2>&1 > /app/comet.log
    networks:
      - app-tier

  job:
    image: goim/job
    build:
      context: ./
      args:
        - project=job
    command: /app/job -conf=/app/job.toml -region=sh -zone=sh001 -deploy.env=dev 2>&1 > /app/job.log
    depends_on:
      - kafka
    networks:
      - app-tier

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: "kafka"
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "goim-push-topic:3:3"
    depends_on:
      - zookeeper
    networks:
      - app-tier
  
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    restart: unless-stopped
    networks:
      - app-tier
  
  redis:
    image: redis:6.2.6-alpine
    ports:
      - "6379:6379"
    command: redis-server --requirepass Tlqm520
    networks:
      - app-tier
  